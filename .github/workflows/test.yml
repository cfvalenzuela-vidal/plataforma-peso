name: Ubuntu Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Upgrade pip and pre-cache requirements
        run: |
          python -m pip install --upgrade pip
          echo "Pre-caching requirements to create cache folder"
          pip install --dry-run --ignore-installed -r requirements.txt

      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cache-v4-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-v4-

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Install wget and unzip
        run: sudo apt-get update && sudo apt-get install -y wget unzip

      # --- Instalación Chrome y Chromedriver para Selenium ---
      - name: Install Chrome
        run: |
          sudo apt-get install -y google-chrome-stable || true
          # En Ubuntu runners, chrome ya está instalado, pero aseguramos
          # En caso que no, instalamos el paquete por PPA o alternativa

      - name: Install Chromedriver
        run: |
          CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
          echo "Chrome version: $CHROME_VERSION"
          CHROMEDRIVER_VERSION=$(curl -sS https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
          echo "Chromedriver version: $CHROMEDRIVER_VERSION"
          wget -N https://chromedriver.storage.googleapis.com/${CHROMEDRIVER_VERSION}/chromedriver_linux64.zip -P ~/
          unzip ~/chromedriver_linux64.zip -d ~/
          sudo mv -f ~/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver

      # --- Correr pruebas ---
      - name: Start API server in background
        run: nohup python3 src/api.py &

      - name: Wait for server to start
        run: sleep 5

      - name: Test connection to Flask
        run: curl http://127.0.0.1:5000/

      - name: Run API tests
        run: pytest tests/test_api.py -v

      - name: Run Usuarios tests
        run: pytest tests/test_usuarios.py -v

      - name: Run Selenium tests
        run: pytest tests/test_funcioanles_selenium.py -v
