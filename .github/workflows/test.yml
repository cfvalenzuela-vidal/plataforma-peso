name: Windows Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - run: |
          python -m pip install --upgrade pip
          pip install --dry-run --ignore-installed -r requirements.txt
        shell: cmd

      - uses: actions/cache@v3
        with:
          path: C:\Users\runneradmin\AppData\Local\pip\Cache
          key: ${{ runner.os }}-pip-cache-v4-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-v4-

      - run: pip install -r requirements.txt

      - run: |
          choco install googlechrome -y --ignore-checksums
          choco install chromedriver -y --ignore-checksums
        shell: cmd

      - run: echo "C:\ProgramData\chocolatey\bin" >> $env:GITHUB_PATH
        shell: pwsh

      - name: Start API server in background
        shell: pwsh
        run: |
          Start-Process python -ArgumentList 'src/api.py' -NoNewWindow -PassThru

      - name: List python processes and ports
        shell: pwsh
        run: |
          Get-Process python
          netstat -ano | Select-String ":5000"

      - name: Wait for server to start (up to 30s)
        shell: pwsh
        run: |
          $maxAttempts = 5
          $attempt = 0
          do {
            try {
              $response = Invoke-WebRequest -Uri http://localhost:5000 -UseBasicParsing -TimeoutSec 2
              if ($response.StatusCode -eq 200) {
                Write-Host "Server is up!"
                exit 0
              }
            } catch {
              Write-Host "Server not ready yet... retrying"
            }
            Start-Sleep -Seconds 1
            $attempt++
          } while ($attempt -lt $maxAttempts)
          Write-Error "Server did not start within timeout"
          exit 1

      - run: pytest .\tests\test_api.py -v

      - run: pytest .\tests\test_usuarios.py -v

      - run: python .\tests\test_funcionales_selenium.py
