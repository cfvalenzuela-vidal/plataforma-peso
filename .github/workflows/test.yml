name: Ubuntu Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Instalar 3.12
        uses: actions/setup-python@v4
        with:
          python-version: 3.12

      - name: Actualizar pip y pre-cache 
        run: |
          python -m pip install --upgrade pip
          pip install --dry-run --ignore-installed -r requirements.txt

      - name: Cache pip paquetes 
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-cache-v4-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-cache-v4-

      - name: Instalar dependencias
        run: pip install -r requirements.txt

      #- name: Install JMeter 5.6.3 
      #  run: |
      #    wget https://archive.apache.org/dist/jmeter/binaries/apache-jmeter-5.6.3.zip
      #    unzip apache-jmeter-5.6.3.zip
      #    mv apache-jmeter-5.6.3 jmeter

      #- name: Instalar wget and unzip
      #  run: sudo apt-get update && sudo apt-get install -y wget unzip

      #- name: Instalar Chrome 125 and Chromedriver 125
      #  run: |
          # Descargar Chrome
      #    wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/125.0.6422.141/linux64/chrome-linux64.zip
      #    unzip -q chrome-linux64.zip
      #    sudo mv chrome-linux64 /opt/chrome
      #    sudo ln -sf /opt/chrome/chrome /usr/bin/google-chrome

          # Descargar Chromedriver
      #    wget https://edgedl.me.gvt1.com/edgedl/chrome/chrome-for-testing/125.0.6422.141/linux64/chromedriver-linux64.zip
      #    unzip -q chromedriver-linux64.zip
      #    sudo mv chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
      #    sudo chmod +x /usr/local/bin/chromedriver

      - name: Start API server in segundo plano
        run: nohup python3 src/api.py &

      - name: Esperar para iniciar
        run: sleep 5

      - name: Test conexión to Flask
        run: curl http://127.0.0.1:5000/

##ACA CODIGO

      - name: Instalar Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Verificar Java version
        run: java -version

      - name: Install dependencies
        run: |
          pip install pytest pytest-cov  # Instala las herramientas de cobertura

      - name: Run tests with coverage
        run: |
          pytest --cov=./ --cov-report=xml:coverage.xml  # Genera el informe XML

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v5
        with:
          projectBaseDir: .
          # Configuración específica para Python
          args: >
            -Dsonar.python.coverage.reportPaths=coverage.xml
            -Dsonar.coverage.exclusions=**/test_*.py  # Opcional: excluye tests de la cobertura
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}